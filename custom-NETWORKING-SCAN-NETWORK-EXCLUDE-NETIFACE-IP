#!/bin/bash

#
# Script: Scan Network IP Addresses Excluding Interface IP
# Description: This script scans a local network for connected devices.
#              It prompts the user to select a network interface, then uses
#              nmap, netdiscover, and nbtscan to discover and list IP addresses,
#              excluding the IP of the selected interface.
# Dependencies: nmap, netdiscover, whiptail
#

# --- Dependency Check ---
# Ensure all required packages are installed before proceeding.
for PACKAGE in nmap netdiscover whiptail; do
    if ! dpkg -s $PACKAGE >/dev/null 2>&1; then
        echo "Dependency $PACKAGE is not installed. Installing..."
        sudo apt update
        sudo apt install -y $PACKAGE
        # Verify installation and exit if it failed.
        if ! dpkg -s $PACKAGE >/dev/null 2>&1; then
            echo "Failed to install dependency $PACKAGE. Exiting..."
            exit 1
        fi
    fi
done

# --- Network Interface Selection ---
# Fetch available network interfaces and present them to the user.
__AVAILABLE_NETIFACE=$(ip addr show |
    grep '^[0-9]' |      # Filter for lines starting with a number (indicating an interface)
    cut -d: -f2 |        # Extract the interface name
    nl |                 # Add line numbers for the menu
    tr -d ' ')           # Remove extra spaces

# Count the number of available interfaces for the menu.
__AVAILABLE_NETIFACE_COUNT=$(echo "$__AVAILABLE_NETIFACE" | wc -l)

# Display a menu for the user to select an interface.
__CHOICE_NETIFACE=$(whiptail --title "Select Network Interface" \
    --menu "Choose an interface to scan:" 0 0 $__AVAILABLE_NETIFACE_COUNT \
    $__AVAILABLE_NETIFACE 3>&1 1>&2 2>&3)

# Exit if the user cancels the selection.
if [ -z "$__CHOICE_NETIFACE" ]; then
    echo "Operation aborted by the user. Exiting..."
    exit
fi

# --- IP Address and Range Extraction ---
# Get the name of the selected interface.
__SELECTED_NETIFACE_FINAL=$(echo "$__AVAILABLE_NETIFACE" |
    grep -w "^$__CHOICE_NETIFACE" | # Find the chosen interface by its number
    sed "s/$__CHOICE_NETIFACE//1" | # Remove the number prefix
    tr -d '[:space:]')             # Trim whitespace

# Extract the IP address and subnet (CIDR notation) for the selected interface.
__NETIFACE_IPADDR_SCAN_RANGE=$(ip addr show "$__SELECTED_NETIFACE_FINAL" |
    grep -w "inet" |         # Filter for the line containing the IPv4 address
    awk '{print $2}')        # Extract the second field (the IP address with CIDR)

# Remove the CIDR notation (e.g., /24) to get the clean IP address.
__SANITIZED_IP_ADDR_SCAN_RANGE=$(echo "$__NETIFACE_IPADDR_SCAN_RANGE" | sed 's+/[0-9]*++g')

# --- Network Scanning ---
echo "><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><"

# Use netdiscover to find live hosts on the network.
echo "Running netdiscover for range: $__NETIFACE_IPADDR_SCAN_RANGE"
sudo netdiscover -r "$__NETIFACE_IPADDR_SCAN_RANGE" -P

echo -e "\n\e[3;102m ========================================= \e[0m"
echo -e "\e[4;43m Running nbtscan for range: $__NETIFACE_IPADDR_SCAN_RANGE \e[0m"
# Use nbtscan to find NetBIOS name information.
sudo nbtscan "$__NETIFACE_IPADDR_SCAN_RANGE"
echo -e "\e[3;102m ========================================= \e[0m"

# --- Final IP Address Discovery ---
# Use nmap to perform a ping scan and identify all IP addresses on the network.
# The IP of the scanning machine is excluded from the final list.
__ALL_IP_ADDRESSES_UNDER_NETIFACE=$(sudo nmap -sn "$__NETIFACE_IPADDR_SCAN_RANGE" |
    grep "Nmap scan report for" |
    sed 's/Nmap scan report for//g' |
    grep -v "$__SANITIZED_IP_ADDR_SCAN_RANGE")

# Display the final list of discovered IP addresses.
echo -ne "\n########################################"
echo -e "\n########## IP Addresses Found ##########\n"
echo "$__ALL_IP_ADDRESSES_UNDER_NETIFACE"
echo -e "\n#######################################\n"

# Wait for user input before exiting.
read -p "Press ENTER to exit..."
